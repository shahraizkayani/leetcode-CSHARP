/*
Given an unsorted integer array, find the smallest missing positive integer.

Example 1:

Input: [1,2,0]
Output: 3
Example 2:

Input: [3,4,-1,1]
Output: 2
Example 3:

Input: [7,8,9,11,12]
Output: 1
Note:

Your algorithm should run in O(n) time and uses constant extra space.




*/
public class Solution {
    public int FirstMissingPositive(int[] nums) {
        int number=1;
        if (nums.Length <=0){
            return number;
        }
        Array.Sort(nums);
     //   int number=1;
        
       
        List<int> list1 = new List<int>();
        
        foreach(int i in nums){
            if( i > 0)
            list1.Add(i);
        }
        
        if(list1.Count < 0){
            list1.Add(0);
        }
         List<int> list = Enumerable.Range(1,list1.Count).ToList();
        
        int count  = 0;
        foreach(int i in list){
            if(list1.Contains(i)){
               
            }else{
                count = 1;
                number = i;
                break;
            }
        }
       if (list.Count == list1.Count && count == 0){
            return list.Count + 1;
        }
        return  number;
    }
}
