/*
Given an integer n, return any array containing n unique integers such that they add up to 0.

 

Example 1:

Input: n = 5
Output: [-7,-1,1,3,4]
Explanation: These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4].
Example 2:

Input: n = 3
Output: [-1,0,1]
Example 3:

Input: n = 1
Output: [0]
 

Constraints:

1 <= n <= 1000

*/
public class Solution {
    public int[] SumZero(int n) {
      
        bool sucess = n % 2 == 0;
        List<int> list = new List<int>();
        
        int i = (int)Math.Floor(n/2.0) *-1;
          int j = (int)Math.Floor(n/2.0) ;
        
       
        for ( ; i <= j ; i++){
           if(i ==0 && sucess == true){
               continue;
           }
            list.Add(i);
        }
        return list.ToArray();
    }
}
