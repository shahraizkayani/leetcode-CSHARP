/*
Given an integer array arr, count element x such that x + 1 is also in arr.

If there're duplicates in arr, count them seperately.

 

Example 1:

Input: arr = [1,2,3]
Output: 2
Explanation: 1 and 2 are counted cause 2 and 3 are in arr.
Example 2:

Input: arr = [1,1,3,3,5,5,7,7]
Output: 0
Explanation: No numbers are counted, cause there's no 2, 4, 6, or 8 in arr.
Example 3:

Input: arr = [1,3,2,3,5,0]
Output: 3
Explanation: 0, 1 and 2 are counted cause 1, 2 and 3 are in arr.
Example 4:

Input: arr = [1,1,2,2]
Output: 2
Explanation: Two 1s are counted cause 2 is in arr.
 

Constraints:

1 <= arr.length <= 1000
0 <= arr[i] <= 1000







*/



public class Solution {
    public int CountElements(int[] arr) {
        
        Array.Sort(arr);
        var hash = new HashSet<int>(arr);
        
      var arr1 = hash.ToArray();
        int count =0;
        var count3 = new List<int>();
        for(int i =1 ;i<arr1.Length;i++)
        {
           
            if(arr1[i] - arr1[i-1] == 1){
                count++;
                
                count3.Add(arr1[i-1]);
            }
        }
       // Console.WriteLine(count);
       
        int count4 = 0;
        foreach(int i in arr){
            
            if(count3.Contains(i)){
                count4++;
            }
            
        }
        int count9 = count4-count;
        count = count9+count;
        return count;
        
    }
}
