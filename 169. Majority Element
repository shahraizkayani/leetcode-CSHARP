/*
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2




*/
public class Solution {
    public int MajorityElement(int[] nums) {
        if(nums.Length == 1){
            return nums[0];
        }
        
        int length =(int) Math.Ceiling(nums.Length/2.0) ;
        
        var dictionary = new Dictionary <int,int>();
        foreach (int i in nums) {
            
          
            if(dictionary.ContainsKey(i)){
                 
                dictionary[i]++;
              
                 if(dictionary[i] >= length) {
                return i;
            }
            }
            else{
                dictionary.Add(i,1);
            }
            
        }
        return 0;
    }
}
