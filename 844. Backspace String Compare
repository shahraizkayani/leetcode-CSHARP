/*
Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
Example 2:

Input: S = "ab##", T = "c#d#"
Output: true
Explanation: Both S and T become "".
Example 3:

Input: S = "a##c", T = "#a#c"
Output: true
Explanation: Both S and T become "c".
Example 4:

Input: S = "a#c", T = "b"
Output: false
Explanation: S becomes "c" while T becomes "b".
Note:

1 <= S.length <= 200
1 <= T.length <= 200
S and T only contain lowercase letters and '#' characters.
Follow up:

Can you solve it in O(N) time and O(1) space?



*/
public class Solution{public bool BackspaceCompare(string S,string T){Stack<char>hash=new Stack<char>();foreach(char ch in S){if(ch!='#'){hash.Push(ch);}
else if(ch=='#'&&hash.Count()>0){hash.Pop();}}
Stack<char>hash1=new Stack<char>();foreach(char ch in T){if(ch!='#'){hash1.Push(ch);}
else if(ch=='#'&&hash1.Count()>0){hash1.Pop();}}
                                                                      
         string s1=new string(hash.ToArray());
        string s2=new string(hash1.ToArray());
                                       Console.WriteLine(s1==s2);                               
                                                                      
                                                                      
return s1==s2;}}
