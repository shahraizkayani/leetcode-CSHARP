/*
Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.


*/
public class Solution {
    public int FirstUniqChar(string s) {
        
        
        var unique = new Dictionary<char,int>();
        
        foreach (char c in s) {
            
            if(unique.ContainsKey(c)){
                unique[c]++;
            }
            else {
                unique.Add(c,1);
            }}
            int num = -1;
            foreach(KeyValuePair<char,int> k in unique)
            {
                
                if(k.Value == 1){
                    num = s.IndexOf(k.Key);
                    break;
                }
            }
            return num;
        
    }
}
