/*

Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]







*/
public class Solution {
    public IList<IList<int>> Generate(int numRows) {
        
        var list = new List<IList<int>> ();
        
      //  int num = 0;
        for(int i = 1; i <= numRows ; i++)
        {
            List  <int> list1 = new List<int>();
            
            for(int j = 1 ; j <=i ; j++){
                
                 if(j == 1){
                    list1.Add(1);
                    continue;
                }
                
                if(j == i){
                   // Console.Write(j);
                    list1.Add(1);
                    break;
                }
               
                 
            list1.Add(list[i-2][j-2] + list[i-2][j-1]);
               
               
            }
            list.Add(list1);
            
            
        }
        return list;
        
        
        
    }
}
